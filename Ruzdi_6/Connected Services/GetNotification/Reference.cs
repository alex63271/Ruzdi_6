//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторного создания кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GetNotification
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://fciit.ru/eis2/ruzdi/getNotificationPackageStateService/v1_0", ConfigurationName="GetNotification.ruzdiGetNotificationPackageStateService_v1_1PortType")]
    public interface ruzdiGetNotificationPackageStateService_v1_1PortType
    {
        
        // CODEGEN: Создается контракт сообщения, так как операция имеет много возвращаемых значений.
        [System.ServiceModel.OperationContractAttribute(Action="http://fciit.ru/eis2/ruzdi/getNotificationPackageState", ReplyAction="//fciit.ru/eis2/ruzdi/getNotificationPackageStateService/v1_0/getNotificationPack" +
            "ageStateService/getNotificationPackageStateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<GetNotification.getNotificationPackageStateResponse> getNotificationPackageStateAsync(GetNotification.getNotificationPackageStateRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fciit.ru/eis2/ruzdi/getNotificationPackageStateService/v1_0")]
    public enum packageStateType
    {
        
        /// <remarks/>
        RECIEVED,
        
        /// <remarks/>
        INCONTROL,
        
        /// <remarks/>
        PAYMENTWAITING,
        
        /// <remarks/>
        FAULT,
        
        /// <remarks/>
        INWORK,
        
        /// <remarks/>
        RESULT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fciit.ru/eis2/ruzdi/getNotificationPackageStateService/v1_0")]
    public partial class pledgeNotificationStatePackageType
    {
        
        private string packageIdField;
        
        private string uipField;
        
        private StateType packageStateCodeField;
        
        private pledgeNotificationStateListElementType[] pledgeNotificationStateListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string packageId
        {
            get
            {
                return this.packageIdField;
            }
            set
            {
                this.packageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string uip
        {
            get
            {
                return this.uipField;
            }
            set
            {
                this.uipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public StateType packageStateCode
        {
            get
            {
                return this.packageStateCodeField;
            }
            set
            {
                this.packageStateCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute("pledgeNotificationStateListElement", IsNullable=false)]
        public pledgeNotificationStateListElementType[] pledgeNotificationStateList
        {
            get
            {
                return this.pledgeNotificationStateListField;
            }
            set
            {
                this.pledgeNotificationStateListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fciit.ru/eis2/ruzdi/getNotificationPackageStateService/v1_0")]
    public partial class StateType
    {
        
        private string codeField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fciit.ru/eis2/ruzdi/getNotificationPackageStateService/v1_0")]
    public partial class documentAndSignatureType
    {
        
        private documentTypeType documentTypeField;
        
        private bool documentTypeFieldSpecified;
        
        private byte[] valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public documentTypeType documentType
        {
            get
            {
                return this.documentTypeField;
            }
            set
            {
                this.documentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentTypeSpecified
        {
            get
            {
                return this.documentTypeFieldSpecified;
            }
            set
            {
                this.documentTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="base64Binary")]
        public byte[] Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fciit.ru/eis2/ruzdi/getNotificationPackageStateService/v1_0")]
    public enum documentTypeType
    {
        
        /// <remarks/>
        Notification,
        
        /// <remarks/>
        RegistrationCertificate,
        
        /// <remarks/>
        RegistrationRejection,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://fciit.ru/eis2/ruzdi/getNotificationPackageStateService/v1_0")]
    public partial class pledgeNotificationStateListElementType
    {
        
        private string notificationIdField;
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string notificationId
        {
            get
            {
                return this.notificationIdField;
            }
            set
            {
                this.notificationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("documentAndSignature", typeof(documentAndSignatureType), Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("notificationStateCode", typeof(StateType), Order=1)]
        public object Item
        {
            get
            {
                return this.itemField;
            }
            set
            {
                this.itemField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getNotificationPackageStateRequest", WrapperNamespace="http://fciit.ru/eis2/ruzdi/getNotificationPackageStateService/v1_0", IsWrapped=true)]
    public partial class getNotificationPackageStateRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://fciit.ru/eis2/ruzdi/getNotificationPackageStateService/v1_0", Order=0)]
        public string packageId;
        
        public getNotificationPackageStateRequest()
        {
        }
        
        public getNotificationPackageStateRequest(string packageId)
        {
            this.packageId = packageId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getNotificationPackageStateResponse", WrapperNamespace="http://fciit.ru/eis2/ruzdi/getNotificationPackageStateService/v1_0", IsWrapped=true)]
    public partial class getNotificationPackageStateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://fciit.ru/eis2/ruzdi/getNotificationPackageStateService/v1_0", Order=0)]
        public GetNotification.packageStateType packageState;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://fciit.ru/eis2/ruzdi/getNotificationPackageStateService/v1_0", Order=1)]
        public GetNotification.pledgeNotificationStatePackageType pledgeNotificationStatePackage;
        
        public getNotificationPackageStateResponse()
        {
        }
        
        public getNotificationPackageStateResponse(GetNotification.packageStateType packageState, GetNotification.pledgeNotificationStatePackageType pledgeNotificationStatePackage)
        {
            this.packageState = packageState;
            this.pledgeNotificationStatePackage = pledgeNotificationStatePackage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface ruzdiGetNotificationPackageStateService_v1_1PortTypeChannel : GetNotification.ruzdiGetNotificationPackageStateService_v1_1PortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ruzdiGetNotificationPackageStateService_v1_1PortTypeClient : System.ServiceModel.ClientBase<GetNotification.ruzdiGetNotificationPackageStateService_v1_1PortType>, GetNotification.ruzdiGetNotificationPackageStateService_v1_1PortType
    {
        
        /// <summary>
        /// Реализуйте этот разделяемый метод для настройки конечной точки службы.
        /// </summary>
        /// <param name="serviceEndpoint">Настраиваемая конечная точка</param>
        /// <param name="clientCredentials">Учетные данные клиента.</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ruzdiGetNotificationPackageStateService_v1_1PortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(ruzdiGetNotificationPackageStateService_v1_1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), ruzdiGetNotificationPackageStateService_v1_1PortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ruzdiGetNotificationPackageStateService_v1_1PortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ruzdiGetNotificationPackageStateService_v1_1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ruzdiGetNotificationPackageStateService_v1_1PortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ruzdiGetNotificationPackageStateService_v1_1PortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ruzdiGetNotificationPackageStateService_v1_1PortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<GetNotification.getNotificationPackageStateResponse> getNotificationPackageStateAsync(GetNotification.getNotificationPackageStateRequest request)
        {
            return base.Channel.getNotificationPackageStateAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ruzdiGetNotificationPackageStateService_v1_1HttpSoap11Endpoint))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ruzdiGetNotificationPackageStateService_v1_1HttpSoap12Endpoint))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Не удалось найти конечную точку с именем \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ruzdiGetNotificationPackageStateService_v1_1HttpSoap11Endpoint))
            {
                return new System.ServiceModel.EndpointAddress("http://ruzditest.eisnot.ru:8280/services/ruzdiGetNotificationPackageStateService_" +
                        "v1_1.ruzdiGetNotificationPackageStateService_v1_1HttpSoap11Endpoint");
            }
            if ((endpointConfiguration == EndpointConfiguration.ruzdiGetNotificationPackageStateService_v1_1HttpSoap12Endpoint))
            {
                return new System.ServiceModel.EndpointAddress("http://ruzditest.eisnot.ru:8280/services/ruzdiGetNotificationPackageStateService_" +
                        "v1_1.ruzdiGetNotificationPackageStateService_v1_1HttpSoap12Endpoint");
            }
            throw new System.InvalidOperationException(string.Format("Не удалось найти конечную точку с именем \"{0}\".", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ruzdiGetNotificationPackageStateService_v1_1HttpSoap11Endpoint,
            
            ruzdiGetNotificationPackageStateService_v1_1HttpSoap12Endpoint,
        }
    }
}
