<Window
    x:Class="Ruzdi_6.View.WindowForUZ1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:view="clr-namespace:Ruzdi_6.View"
    xmlns:vm="clr-namespace:Ruzdi_6.ViewModel"
    xmlns:vmdd="clr-namespace:Ruzdi_6.ViewModel_DesignData"
    Title="Уведомление о возникновении залога"
    Width="1000"
    Height="800"
    DataContext="{Binding VMWindowForUZ1, Source={StaticResource Locator}}"  
    d:DataContext="{d:DesignInstance vmdd:VMWindowForUZ1DD,IsDesignTimeCreatable=True}"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1.3*" />
            <RowDefinition Height="19*" />
            <RowDefinition Height="0.2*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="15*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>

        <Border
            Grid.Column="1"
            BorderBrush="BlueViolet"
            BorderThickness="2"
            CornerRadius="15">
            <Border.Resources>
                <!--#region Переопределение шаблона RadioButton-->
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="2"
                                    SnapsToDevicePixels="true"
                                    Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                    StrokeDashArray="1 2"
                                    StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFDDDDDD" />
                <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070" />
                <Style x:Key="OptionMarkFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="14,0,0,0"
                                    SnapsToDevicePixels="true"
                                    Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                    StrokeDashArray="1 2"
                                    StrokeThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF" />
                <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF" />
                <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121" />
                <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6" />
                <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC" />
                <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070" />
                <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF" />
                <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD" />
                <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121" />
                <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121" />
                <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">

                    <Setter Property="FontSize" Value="22" />

                    <Setter Property="Margin" Value="5,0" />

                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                    <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}" />
                    <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RadioButton}">
                                <Border
                                    x:Name="radioButtonBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                    <ContentPresenter
                                        x:Name="contentPresenter"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Focusable="False"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasContent" Value="true">
                                        <Setter Property="Padding" Value="4,-1,4,0" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.MouseOver.Background}" />
                                        <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.MouseOver.Border}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Disabled.Background}" />
                                        <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Disabled.Border}" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Pressed.Background}" />
                                        <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Pressed.Border}" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="true">
                                        <!--<Setter Property="Opacity" TargetName="optionMark" Value="1"/>-->
                                        <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.MouseOver.Background}" />
                                        <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.MouseOver.Border}" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="{x:Null}">
                                        <!--<Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>-->
                                        <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Disabled.Background}" />
                                        <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Disabled.Border}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <!--#endregion-->
            </Border.Resources>
            <StackPanel
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Horizontal">

                <RadioButton
                    Command="{Binding ToPledgorsCommand}"
                    Content="Залогодатель"
                    GroupName="1"
                    IsChecked="{Binding IsCheckedPledgor}"
                    Style="{DynamicResource RadioButtonStyle}" />
                <TextBlock VerticalAlignment="Center" Text="&gt;&gt;" />
                <RadioButton
                    Command="{Binding ToPledgeeCommand}"
                    Content="Залогодержатель"
                    GroupName="1"
                    IsChecked="{Binding IsCheckedPledgee}"
                    Style="{DynamicResource RadioButtonStyle}" />
                <TextBlock VerticalAlignment="Center" Text="&gt;&gt;" />
                <RadioButton
                    Command="{Binding ToProperty}"
                    Content="Имущество"
                    GroupName="1"
                    IsChecked="{Binding IsCheckedProperty}"
                    Style="{DynamicResource RadioButtonStyle}" />
                <TextBlock VerticalAlignment="Center" Text="&gt;&gt;" />
                <RadioButton
                    Command="{Binding ToContractCommand}"
                    Content="Договор залога"
                    GroupName="1"
                    IsChecked="{Binding IsCheckedContract}"
                    Style="{DynamicResource RadioButtonStyle}" />
                <TextBlock VerticalAlignment="Center" Text="&gt;&gt;" />
                <RadioButton
                    Command="{Binding ToApplicantCommand}"
                    Content="Заявитель"
                    GroupName="1"
                    IsChecked="{Binding IsCheckedApplicant}"
                    Style="{DynamicResource RadioButtonStyle}" />

            </StackPanel>
        </Border>

        <ContentControl
            Grid.Row="1"
            Grid.Column="1"
            Content="{Binding CurrentContentVM}">
            <ContentControl.Resources>

                <DataTemplate DataType="{x:Type vm:VM_Pledgor}">
                    <view:List_PledgorUC />
                </DataTemplate>

                <DataTemplate DataType="{x:Type vm:VM_Pledgee}">
                    <view:ListPledgeeUC />
                </DataTemplate>

                <DataTemplate DataType="{x:Type vm:VM_Property}">
                    <view:ListPropertyUC />
                </DataTemplate>

                <DataTemplate DataType="{x:Type vm:VM_Contract}">
                    <view:PledgeeContractUC />
                </DataTemplate>

                <DataTemplate DataType="{x:Type vm:VM_Applicant}">
                    <view:ApplicantUC />
                </DataTemplate>

                <!--#region Шаблон для дизайнера xaml d: -->
                <d:DataTemplate DataType="{x:Type vmdd:VM_ApplicantDD}">
                    <view:ApplicantUC />
                </d:DataTemplate>
                <!--#endregion-->

            </ContentControl.Resources>
        </ContentControl>
    </Grid>
</Window>
