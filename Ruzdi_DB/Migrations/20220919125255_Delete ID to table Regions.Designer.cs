// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ruzdi_DB.Context;

#nullable disable

namespace Ruzdi_DB.Migrations
{
    [DbContext(typeof(DB_Ruzdi))]
    [Migration("20220919125255_Delete ID to table Regions")]
    partial class DeleteIDtotableRegions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NotificationPledgor", b =>
                {
                    b.Property<string>("NotificationsId")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("PledgorsId")
                        .HasColumnType("varchar(95)");

                    b.HasKey("NotificationsId", "PledgorsId");

                    b.HasIndex("PledgorsId");

                    b.ToTable("NotificationPledgor");
                });

            modelBuilder.Entity("Ruzdi_DB.Entityes.Contracts", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(95)");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("TermOfContract")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Ruzdi_DB.Entityes.Notification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("ContractsID")
                        .HasColumnType("varchar(95)");

                    b.Property<DateTime?>("DataTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Error")
                        .HasColumnType("longtext");

                    b.Property<string>("NumberNotification")
                        .HasColumnType("longtext");

                    b.Property<string>("Packageguid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Packageid")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TypeNotification")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ZipArchive")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("registrationCertificateId")
                        .HasColumnType("varchar(95)");

                    b.HasKey("Id");

                    b.HasIndex("ContractsID");

                    b.HasIndex("registrationCertificateId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Ruzdi_DB.Entityes.Pledgor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Pledgor");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pledgor");
                });

            modelBuilder.Entity("Ruzdi_DB.Entityes.Regions", b =>
                {
                    b.Property<string>("CodeRegion")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CodeRegion");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            CodeRegion = "77",
                            Region = "Москва"
                        },
                        new
                        {
                            CodeRegion = "50",
                            Region = "Московская область"
                        },
                        new
                        {
                            CodeRegion = "78",
                            Region = "Санкт-Петербург"
                        },
                        new
                        {
                            CodeRegion = "29",
                            Region = "Архангельская область"
                        },
                        new
                        {
                            CodeRegion = "36",
                            Region = "Воронежская область"
                        },
                        new
                        {
                            CodeRegion = "40",
                            Region = "Калужская область"
                        },
                        new
                        {
                            CodeRegion = "48",
                            Region = "Липецкая область"
                        },
                        new
                        {
                            CodeRegion = "62",
                            Region = "Рязанская область"
                        },
                        new
                        {
                            CodeRegion = "71",
                            Region = "Тульская область"
                        },
                        new
                        {
                            CodeRegion = "76",
                            Region = "Ярославская область"
                        },
                        new
                        {
                            CodeRegion = "67",
                            Region = "Смоленская область"
                        });
                });

            modelBuilder.Entity("Ruzdi_DB.Entityes.RegistrationCertificate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("documentAndSignature")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RegistrationCertificate");
                });

            modelBuilder.Entity("Ruzdi_DB.Entityes.Organizations", b =>
                {
                    b.HasBaseType("Ruzdi_DB.Entityes.Pledgor");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("INN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameFull")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OGRN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RegionCodeRegion")
                        .IsRequired()
                        .HasColumnType("varchar(95)")
                        .HasColumnName("Organizations_RegionCodeRegion");

                    b.HasIndex("RegionCodeRegion");

                    b.HasDiscriminator().HasValue("Organizations");
                });

            modelBuilder.Entity("Ruzdi_DB.Entityes.Persons", b =>
                {
                    b.HasBaseType("Ruzdi_DB.Entityes.Pledgor");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("First")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Last")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Middle")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonDocument")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RegionCodeRegion")
                        .IsRequired()
                        .HasColumnType("varchar(95)");

                    b.HasIndex("RegionCodeRegion");

                    b.HasDiscriminator().HasValue("Persons");
                });

            modelBuilder.Entity("NotificationPledgor", b =>
                {
                    b.HasOne("Ruzdi_DB.Entityes.Notification", null)
                        .WithMany()
                        .HasForeignKey("NotificationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ruzdi_DB.Entityes.Pledgor", null)
                        .WithMany()
                        .HasForeignKey("PledgorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ruzdi_DB.Entityes.Notification", b =>
                {
                    b.HasOne("Ruzdi_DB.Entityes.Contracts", "PledgeContract")
                        .WithMany("Notifications")
                        .HasForeignKey("ContractsID");

                    b.HasOne("Ruzdi_DB.Entityes.RegistrationCertificate", "registrationCertificate")
                        .WithMany()
                        .HasForeignKey("registrationCertificateId");

                    b.Navigation("PledgeContract");

                    b.Navigation("registrationCertificate");
                });

            modelBuilder.Entity("Ruzdi_DB.Entityes.Organizations", b =>
                {
                    b.HasOne("Ruzdi_DB.Entityes.Regions", "Region")
                        .WithMany("Organizations")
                        .HasForeignKey("RegionCodeRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Ruzdi_DB.Entityes.Persons", b =>
                {
                    b.HasOne("Ruzdi_DB.Entityes.Regions", "Region")
                        .WithMany("Persons")
                        .HasForeignKey("RegionCodeRegion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Ruzdi_DB.Entityes.Contracts", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Ruzdi_DB.Entityes.Regions", b =>
                {
                    b.Navigation("Organizations");

                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
